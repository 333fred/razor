abstract Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpProjectSnapshotManagerDispatcher.AssertDispatcherThread(string caller = null) -> void
abstract Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpProjectSnapshotManagerDispatcher.DispatcherScheduler.get -> System.Threading.Tasks.TaskScheduler
Microsoft.AspNetCore.Razor.OmniSharpPlugin.DefaultOmniSharpProjectSnapshotManagerDispatcher
Microsoft.AspNetCore.Razor.OmniSharpPlugin.DefaultOmniSharpProjectSnapshotManagerDispatcher.DefaultOmniSharpProjectSnapshotManagerDispatcher() -> void
Microsoft.AspNetCore.Razor.OmniSharpPlugin.FallbackRazorConfiguration
Microsoft.AspNetCore.Razor.OmniSharpPlugin.FallbackRazorConfiguration.FallbackRazorConfiguration() -> void
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpHostDocument
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpHostDocument.FileKind.get -> string
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpHostDocument.FilePath.get -> string
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpHostDocument.OmniSharpHostDocument(string filePath, string targetPath, string kind) -> void
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpHostDocument.TargetPath.get -> string
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpHostDocumentComparer
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpHostDocumentComparer.Equals(Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpHostDocument x, Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpHostDocument y) -> bool
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpHostDocumentComparer.GetHashCode(Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpHostDocument hostDocument) -> int
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpHostProject
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpHostProject.Configuration.get -> Microsoft.AspNetCore.Razor.Language.RazorConfiguration
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpHostProject.FilePath.get -> string
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpHostProject.OmniSharpHostProject(string projectFilePath, Microsoft.AspNetCore.Razor.Language.RazorConfiguration razorConfiguration, string rootNamespace) -> void
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpHostProject.RootNamespace.get -> string
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpProjectChangeKind
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpProjectChangeKind.DocumentAdded = 3 -> Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpProjectChangeKind
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpProjectChangeKind.DocumentRemoved = 4 -> Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpProjectChangeKind
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpProjectChangeKind.ProjectAdded = 0 -> Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpProjectChangeKind
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpProjectChangeKind.ProjectChanged = 2 -> Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpProjectChangeKind
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpProjectChangeKind.ProjectRemoved = 1 -> Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpProjectChangeKind
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpProjectSnapshotManagerDispatcher
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpProjectSnapshotManagerDispatcher.OmniSharpProjectSnapshotManagerDispatcher() -> void
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpProjectSnapshotManagerDispatcher.RunOnDispatcherThreadAsync(System.Action action, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpProjectSnapshotManagerDispatcher.RunOnDispatcherThreadAsync<TResult>(System.Func<TResult> action, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<TResult>
Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpRazorCodeDocumentExtensions
Microsoft.AspNetCore.Razor.OmniSharpPlugin.StrongNamed.OmniSharpLanguageServerFeatureOptions
Microsoft.AspNetCore.Razor.OmniSharpPlugin.StrongNamed.OmniSharpLanguageServerFeatureOptions.OmniSharpLanguageServerFeatureOptions() -> void
override Microsoft.AspNetCore.Razor.OmniSharpPlugin.DefaultOmniSharpProjectSnapshotManagerDispatcher.AssertDispatcherThread(string caller = null) -> void
override Microsoft.AspNetCore.Razor.OmniSharpPlugin.DefaultOmniSharpProjectSnapshotManagerDispatcher.DispatcherScheduler.get -> System.Threading.Tasks.TaskScheduler
static Microsoft.AspNetCore.Razor.OmniSharpPlugin.FallbackRazorConfiguration.SelectConfiguration(System.Version version) -> Microsoft.AspNetCore.Razor.Language.RazorConfiguration
static Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpRazorCodeDocumentExtensions.GetInternalCSharpSourceText(this Microsoft.AspNetCore.Razor.Language.RazorCodeDocument codeDocument) -> Microsoft.CodeAnalysis.Text.SourceText
static readonly Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpHostDocumentComparer.Instance -> Microsoft.AspNetCore.Razor.OmniSharpPlugin.OmniSharpHostDocumentComparer